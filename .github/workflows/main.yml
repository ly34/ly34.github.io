# This is a basic workflow to help you get started with Actions

name: issue2post

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  issues:
    types: [opened, edited, labeled]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  dump:
    runs-on: ubuntu-latest
    steps:
      - name: $github
        # run: echo "$GITHUB_CONTEXT"
        run: |
          CONTENT=${{ github.event.comment.title }}
          echo "$CONTENT"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
    # This workflow contains a single job called "build"
  run:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: create md file
        run: echo ${{ github.event.comment.body }}

      - name: Turn comment into file
        run: |
          ID=${{ github.event.comment.title }}
          AUTHOR=${{ github.event.comment.user.login }}
          DATE=${{ github.event.comment.created_at }}
          COMMENT=$(echo "${{ github.event.comment.body }}")
          NO_TAGS=${COMMENT//[<>]/\`}
          TITLE=${ID//[<>]/\`}
          FOLDER=_posts

          printf '%b\n' "${DATE}\r\n ${{ github.event.comment.body }} \r\n" > ${FOLDER}/index.md

      # - name: Assemble page
      #   run: |
      #     # cat header.md > index.md
      #     find _posts/ -name "*.md" | sort -r | xargs -I % cat % >> index.md
      #     # cat footer.md >> index.md

      - name: Push changes to repo
        run: |
          REMOTE=https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git config user.name "${{ github.actor }}"
          git pull ${REMOTE}
          git checkout main
          git add .
          git status
          git commit -am "Add new comment"
          git push ${REMOTE} main
